#!/usr/bin/env bash
# -*- +indent: 2 -*- Open a [[file:bulkrename][bulkrename]] session to modify unix file permissions.
#
# Opens selected files in a bulkrename session alongside both hex and human readable
# file permissions. You can modify the permissions in the session and then the
# associated files will recieve updated permissions. Paths must be supplied through
# stdin.
#
# Because both hex and human-readable permissions are shown, if both are modified the
# numerical representation is prefferred to the written one. If you erase a file-name
# then the permissions are reset to the system defaults.

args=( "$@" )

move_script=$(cat <<- 'EOF'
	IFS=':' read perms_dec1 perms1 file <<< "$1"
	IFS=':' read perms_dec2 perms2 _    <<< "$2"

	[ "$perms1" = "perms2" ] && [ "$perms_dec1" = "perms_dec2" ] && return

	if [ "$perms_dec1" != "$perms_dec2" ]; then
	    final_perms="$perms_dec2"
	else
	    final_perms=$(echo "$perms2" |
	        # Adapted from [[https://unix.stackexchange.com/questions/76521/how-can-i-display-octal-notation-of-permissions-with-ls-and-can-octal-represen][here]].
	        awk '$1 ~ /^[-dsbclp]([-r][-w][-x]){3}[.+]?$/ {
	            for(i=0; i<3; i++) {
	                symbol = substr($0, 2+i*3, 3); sum = 0;
	                if (substr(symbol,1,1) == "r") sum += 4;
	                if (substr(symbol,2,1) == "w") sum += 2;
	                if (substr(symbol,3,1) == "x") sum += 1;
	                printf "%d", sum;
	            }
	        }')
	fi

	[ -n "$final_perms" ] && chmod -c "$final_perms" "$file"
EOF
)

trash_script=$(cat <<- 'EOF'
	IFS=':' read _ filename <<< "$1"
	# WARN hardcoded system default file permissions
	if [ -x "$filename" ]; then
	    # default_perms=$(printf "%03d\n" "$((0777 - $(umask)))")
	    default_perms="755"
	else
	    # default_perms=$(printf "%03d\n" "$((0666 - $(umask)))")
	    default_perms="644"
	fi
	chmod "$default_perms" "$filename"
EOF
)

stat_format='%a:%A:%n'

# TODO: Fix preselect is broken.
# if [ -n "$preselect" ]; then
#   preselect=$(stat --printf "$stat_format\n" "$preselect" 2>/dev/null)
# fi

# shellcheck disable=SC2016
bulkrename \
  --no-verify \
  --cd "$dir" \
  --move "$move_script" \
  --trash "$trash_script" \
  --index-pre-command 'xargs -r -d "\n" -a "$1" stat --printf '"$stat_format""'"'\n'"'"' | sponge "$1"' \
  "${args[@]}"
