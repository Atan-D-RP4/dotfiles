#!/usr/bin/env bash
# Try to handle one or more paths in the best way possible, this could
# mean changing the cwd or opening your EDITOR on the path.
#
# WARN: Because you can only have one cwd active at a time and this cmd
# accepts multiple paths that can involve one or more directories, only
# the last-most directory passed will be changed to.
# If you supply both files and directories (which you SHOULDN'T do) the
# files will be handled first and then the directory.

select_path() {
    local newdir=
    local files=
    files=()
    while read -r p; do
        if [ -d "$p" ]; then
            newdir="$p"
        elif [  -f "$p" ]; then
            files+=( "$p" )
        else
            echo "error: can't handle unknown or non-existant path type: $p" >&2
        fi
    done < <(if [ "$#" -gt 0 ]; then printf "%s\n" "$@"; else cat; fi | xargs -r -d '\n' readlink -m)

    # Edit any given files
    if [ "${#files[@]}" -gt 0 ]; then
       if [ -n "$SELECT_PATH_EDIT_FILE_CMD" ]; then
           printf "%s\n" "${files[@]}" |
               $SELECT_PATH_EDIT_FILE_CMD
       else
           # This is needed to access and interact with the current terminal
           # in the middle of a pipeline (which select_path is probably called
           # in), and without it some less capable editors like vim or...
           # emacsclient (not emacs though (ノдヽ)) will fail to startup properly.
           #
           # See [[https://github.com/cute-jumper/epipe/blob/e881004d7d6248fc6a6ea4c197f0bc56acb60583/epipe#L3][here]].
           local tty=
           if tty="/dev/$(ps -o tty= -p $$)"; then
               # shellcheck disable=SC2086,SC2094
               xargs -r -d '\n' -a <(printf "%s\n" "${files[@]}") ${VISUAL-${EDITOR-vi}} >"$tty" <"$tty"
           else
               echo "select_path: error: failed to read tty" >&2
           fi
       fi
    fi

    # Change to any new directories.
    if [ -n "$newdir" ]; then
        # shellcheck disable=SC2164
        cd "$newdir"
    fi
}
