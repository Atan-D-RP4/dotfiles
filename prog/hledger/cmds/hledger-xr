#!/usr/bin/env python3-dotfiles-venv
# pylint: disable=line-too-long,missing-module-docstring
# Generate a [[https://hledger.org/hledger.html#valuation-commodity][commodity conversion rates]] from the excellent [[https://github.com/fawazahmed0/currency-api][currency api]].

import json

import requests

# List of currencies [[https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies.json][here]] and latest gbp rates [[https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/gbp.json][here]].
MAIN_CURRENCY = "gbp"
# Relevent rates including default values for them.
# defaults were calculated at 2022-01-15 13:38.
CURRENCIES = {
    "eth": 0.000412,
    "xrp": 1.762522,
    "xmr": 0.0062,
}
# Exclude the following currencies when possible.
EXCLUDED_CURRENCIES = set()
# Map invalid currency names into an alternative name.
CURRENCY_MAP = {"1inch": "inch", "00": "ZERO", "1000sats": "ONEKSATS"}

resp = requests.get(
    "https://raw.githubusercontent.com/fawazahmed0/currency-api/1"
    f"/latest/currencies/{MAIN_CURRENCY}.min.json"
)
resp.raise_for_status()
data = json.loads(resp.text)
date = data["date"]
entries = CURRENCIES.copy()
entries.update(data[MAIN_CURRENCY])

for dest_currency, xrate in entries.items():
    if dest_currency in EXCLUDED_CURRENCIES:
        continue

    dest_currency = CURRENCY_MAP.get(dest_currency, dest_currency)
    print(f"P {date} {MAIN_CURRENCY.upper()} {xrate:f} {dest_currency.upper()}")
