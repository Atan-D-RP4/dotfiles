# -*- caddyfile -*-
#
# Caddy media server service definitions.
#
# This caddy configuration file defines all the services my media-server can
# access. It's defined here instead of the main Caddyfile because the caddy
# parser cannot support address definitions within nested snippets. Meaning
# it would not be possible to define a snippet `service_proxy` which then
# invokes another snippet `service_proxy_to` with a default initial argument.
#
# Arguments
# ---------
# 0
#   The TLD that services should be routed under. For example when set to
#   localhost the address jellyfin.localhost will point to the jellyfin
#   service.
# 1
#   The snippet that should be imported to setup a service proxy. This should
#   be a snippet that is compatible with (takes the same arguments as)
#   service_proxy_to.

# Importer         | Subdomain             | TLD       | Host                            | Port

# Dashboards
import   {args[1]}   heimdall                {args[0]}   heimdall                            80
import   {args[1]}   gluetun                 {args[0]}   {$MEDIA_SERVER_HOST:gluetun}      8000

import   {args[1]}   grafana                 {args[0]}   grafana                           3000
import   {args[1]}   prometheus              {args[0]}   prometheus                        9090
import   {args[1]}   bazarr.prometheus       {args[0]}   bazarr-prometheus                   80
import   {args[1]}   lidarr.prometheus       {args[0]}   lidarr-prometheus                   80
import   {args[1]}   prowlarr.prometheus     {args[0]}   prowlarr-prometheus                 80
import   {args[1]}   qbittorrent.prometheus  {args[0]}   qbit-prometheus                  17871
import   {args[1]}   radarr.prometheus       {args[0]}   radarr-prometheus                   80
import   {args[1]}   readarr.prometheus      {args[0]}   readarr-prometheus                  80
import   {args[1]}   sonarr.prometheus       {args[0]}   sonarr-prometheus                   80

# Media Servers
import   {args[1]}   jellyfin                {args[0]}   {$MEDIA_SERVER_HOST:jellyfin}     8096
import   {args[1]}   kavita                  {args[0]}   {$MEDIA_SERVER_HOST:kavita}       5000
import   {args[1]}   navidrome               {args[0]}   {$MEDIA_SERVER_HOST:navidrome}    4533

# Bittorrent Clients
import   {args[1]}   qbittorrent             {args[0]}   {$MEDIA_SERVER_HOST:qbittorrent}  8756
import   {args[1]}   transmission            {args[0]}   {$MEDIA_SERVER_HOST:transmission} 9091

# User Interfaces
import   {args[1]}   flood                   {args[0]}   {$MEDIA_SERVER_HOST:flood}        3000

# Indexers
import   {args[1]}   bazarr                  {args[0]}   {$MEDIA_SERVER_HOST:lidarr}       6767
import   {args[1]}   lidarr                  {args[0]}   {$MEDIA_SERVER_HOST:lidarr}       8686
import   {args[1]}   prowlarr                {args[0]}   {$MEDIA_SERVER_HOST:prowlarr}     9696
import   {args[1]}   radarr                  {args[0]}   {$MEDIA_SERVER_HOST:radarr}       7878
import   {args[1]}   readarr                 {args[0]}   {$MEDIA_SERVER_HOST:readarr}      8787
import   {args[1]}   sonarr                  {args[0]}   {$MEDIA_SERVER_HOST:sonarr}       8989

import   {args[1]}   mylar3                  {args[0]}   {$MEDIA_SERVER_HOST:mylar3}       8090
import   {args[1]}   shoko                   {args[0]}   {$MEDIA_SERVER_HOST:shoko}        8111
