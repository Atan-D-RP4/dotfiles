---
# VPN server configuration. Place any VPN specific configurations into a
# [[file:vpn.docker-compose.override.yml]] file and make sure to set its access
# permissions as 600.

services:
  gluetun:
    container_name: ms-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      PUID: "$PUID"
      PGID: "$PGID"
      TZ: "$TZ"

      # See also [[https://github.com/qdm12/gluetun/wiki/Mullvad][documentation]].
      VPN_TYPE: wireguard
      VPN_SERVICE_PROVIDER: "$VPN_SERVICE_PROVIDER"
      WIREGUARD_PRIVATE_KEY: "$VPN_WG_PRIVATE_KEY"
      WIREGUARD_PRESHARED_KEY: "$VPN_WG_PRESHARED_KEY"
      WIREGUARD_ADDRESSES: "$VPN_WG_ADDRESSES"
      SERVER_COUNTRIES: "$VPN_SERVER_COUNTRIES"

      # Set this in the override file to allow port forwarding from your VPN to your
      # bittorrent application.
      # FIREWALL_VPN_INPUT_PORTS: $TRANSMISSION_PEER_PORT
    image: qmcgaw/gluetun
    logging:
      driver: "$LOGGING_DRIVER"
    ports:
      # Transmission service ports (see [[file:no-vpn.docker-compose.yml]]).
      - 9091:9091
      - 8756:8756
    volumes:
      - $XDG_CONFIG_HOME/media-server/gluetun:/gluetun

  # Set the media-server host so that caddy can still proxy to services running
  # on the same network as gluetun.
  caddy:
    environment:
      MEDIA_SERVER_HOST: gluetun
      JELLYFIN_HOST: gluetun

  # Update services to route through the VPN network.
  kavita: &vpn-config
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: "service:gluetun"
  navidrome:
    <<: *vpn-config
  qbittorrent:
    <<: *vpn-config
  transmission:
    <<: *vpn-config
  flood:
    <<: *vpn-config
  bazarr:
    <<: *vpn-config
  lidarr:
    <<: *vpn-config
  prowlarr:
    <<: *vpn-config
  radarr:
    <<: *vpn-config
  readarr:
    <<: *vpn-config
  shoko:
    <<: *vpn-config
  sonarr:
    <<: *vpn-config
  flaresolverr:
    <<: *vpn-config
