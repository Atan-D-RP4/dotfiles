#!/usr/bin/env zsh
# -*- +indent: 2 -*- zshell interactive [[http://zsh.sourceforge.net/Guide/zshguide02.html][rc]] file.
#          _
#  _______| |__  _ __ ___
# |_  / __| '_ \| '__/ __|
#  / /\__ \ | | | | | (__
# /___|___/_| |_|_|  \___|
#
# Zshell configuration file sourced only in interactive shells.
#
# shellcheck shell=bash

if ! [ -d "$ZGEN_DIR" ]; then
  echo "zgen: installation not found, installing now"
  git clone --quiet https://github.com/jandamm/zgenom.git "$ZGEN_DIR"
fi
ZGEN_RESET_ON_CHANGE=("$ZDOTDIR/.zshrc")
source "$ZGEN_DIR/zgenom.zsh"

unset ZSH_AUTOSUGGEST_USE_ASYNC                                                  # See [[https://github.com/zsh-users/zsh-autosuggestions/issues/483][conflict]] with syntax-highlighting.

zgenom autoupdate
if ! zgenom saved; then
  zgenom load 'mafredri/zsh-async'                                               # Asynchronous actions (for prompt)
  zgenom load 'zsh-users/zsh-completions'                                        # Completions not in zsh mainline (yet)
  zgenom load 'zsh-users/zsh-autosuggestions'                                    # Preview completions/suggestions
  zgenom load 'zsh-users/zsh-syntax-highlighting'                                # Highlight keywords/commands as you write ([[https://github.com/zsh-users/zsh-syntax-highlighting#why-must-zsh-syntax-highlightingzsh-be-sourced-at-the-end-of-the-zshrc-file][must be setup last]])
  # zgenom load 'zdharma-continuum/fast-syntax-highlighting'                     # Syntax highlighting alternative with more features.

  zgenom save
fi

source "$XDG_CONFIG_HOME/shenv"

setopt shwordsplit                                                              # Allows $foo to expand to multiple space delimeted arguments, instead of just one argument.
setopt globsubst                                                                # Allow glob substitutions to be expanded when done so inside of variables. eg. foo='*'; find $foo; will behave just as if you type `find *` directly.
setopt notify                                                                   # Interrupt me to let me know a background jobs finished.
setopt localtraps                                                               # Any and trap calls within a function are undone on exit.
setopt promptpercent                                                            # Allow % substitutions in zsh prompts.
setopt promptsubst                                                              # Allow ${} substitutions in zsh prompts.
setopt appendhistory                                                            # Write to history file after every command.
setopt incappendhistory                                                         # Don't truncate history file.
setopt histfindnodups                                                           # You can store duplicates, but don't show them as distinct candidates.
setopt histignorespace                                                          # Any command lines beginning with an empty space, doesn't get stored in history.
setopt histnofunctions                                                          # Don't store functions in history as functions. foo() { : }, isn't very readable.
setopt nohistbeep                                                               # Supress any history dings. it's bad enough when a GUI does it.
setopt histignoredups                                                           # Don't store repeated history elements.
setopt histignorealldups
setopt histignorespace                                                          # Don't add lines to history if they begin with at least one whitespace character.
setopt nosharehistory                                                           # Share history between all sessions.
setopt autocd                                                                   # Trying to execute a directory, will change you into it.
setopt nobeep
setopt autolist                                                                 # Ambiguous completion candidate automatically shows options on tab.
setopt automenu                                                                 # Completion menu (tab to select and cycle) only happens on second tab press.
unsetopt menucomplete                                                           # Prevent automatic insertion of first ambiguous completion target
setopt noautoremoveslash                                                        # Removes a trailing slash from completed directories.
setopt completeinword                                                           # Allows completions in the middle of a word/argument.
setopt listrowsfirst

# shellcheck disable=SC2296
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"                         # Have completion candidates styled like ls.
zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*'                          # Smart matching of dashed values, e.g. f-b matching foo-bar.
zstyle ':completion:*' completer _expand_alias _complete _ignored               # Expand aliases with tab as well (see also <C-x>+a).
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'                          # Smart case, lower-case can match upper-case but upper-case can only be upper-case.
zstyle ':completion:*' squeeze-slashes true                                     # Interpret foo//bar as foo/bar, not foo/*/bar
# zstyle ':completion:*' insert-tab false                                       # Don't insert a literal tab when trying to complete in an empty line.

# Orders directories first, but seperates files from dirs
# even when theres more than enough room for both :sad:.
# zstyle ':completion:*' list-dirs-first true
# zstyle ':completion:*:matches' group 'yes'
# zstyle ':completion:*'         group-name ''

source "$ZDOTDIR"/bindings

autoload -U compinit && compinit

if [ "${smart_term:-0}" -eq 1 ]; then
  source "$ZDOTDIR/theme"
fi

if [ "$INSIDE_EMACS" = vterm ]; then
  # shellcheck disable=SC2016
  PROMPT="$PROMPT"'%{$(vterm_prompt_end)%}'
fi
