#!/usr/bin/env python3
"""
Misc sections for my tmux status-line. Here I throw in any status-line elements
I haven't created any dedicated scripts for (... yet).
"""

# TODO: Support custom intervals for each section.

import re
import subprocess
import logging
from distutils.spawn import find_executable as which

from shared import print_loop, render_loop

def nordvpn(args):
    """Nordvpn status-line section."""
    if not which('nordvpn'):
        return None
    proc = subprocess.run(['nordvpn', 'status'], capture_output=True)
    out = proc.stdout.decode('utf-8')
    match = re.search(r'Status: (.+)', out, flags=re.IGNORECASE)
    if not match:
        return None
    connected = match[1].lower() == 'connected'
    if args.nordvpn_hide and not connected:
        return None
    ip_address = ''
    match = re.search('Your new IP: (.+)', out, re.IGNORECASE)
    if match:
        ip_address = ' ' + match[1]
    return (args.nordvpn_active_style if connected
            else args.nordvpn_inactive_style) \
        + args.nordvpn_icon + args.reset_style + ip_address

def notmuch(args):
    """notmuch mail status-line section."""
    if not which('notmuch'):
        return None
    # Mapping search queries to the style string to apply for them.
    tag_styles = {
        'tag:unread': args.notmuch_unread_style,
        'tag:flagged': args.notmuch_flagged_style,
    }
    proc = subprocess.run(['notmuch', 'count', '--batch'], capture_output=True,
                          input='\n'.join(tag_styles.keys()), encoding='ascii')
    if proc.returncode != 0:
        return None
    counts = [(None if x == '0' and args.notmuch_hide_zero
               else (args.notmuch_format.format(int(x))))
              if x.isdigit() else '?'
              for x in proc.stdout.rstrip().split('\n')]
    if len(counts) != len(tag_styles):
        logging.error('notmuch: count/search length mismatch: %d/%d', len(counts), len(tag_styles))
        return None
    res = []
    for count, style in zip(counts, tag_styles.values()):
        if not count:
            continue
        if style:
            count = style + count + args.reset_style
        res.append(count)
    if res:
        icon = args.notmuch_icon
        if args.notmuch_icon_style:
            icon = args.notmuch_icon_style + icon + args.reset_style
        res.insert(0, icon)
    return ' '.join(res)

def status_misc(args):
    """Closure around args continually outputting meta-data.
    """
    statuses = [x for x in (args.nordvpn,
                            args.notmuch,) if x]

    def wrapped():
        msgs = (x(args) for x in statuses)
        msgs = [x for x in msgs if x]
        if msgs:
            return args.sep.join(msgs) + args.suffix
        return ''
    return wrapped


if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser()

    parser.add_argument('--suffix',
                        metavar='FORMAT', default='',
                        help='Suffix output with FORMAT.')

    nvpngroup = parser.add_argument_group('Nord VPN')
    nvpngroup.add_argument('--nordvpn',
                           action='store_const', const=nordvpn,
                           help='Show indicator for nordvpn status.')
    nvpngroup.add_argument('--nordvpn-icon', default='N', metavar='ICON',
                           help='Icon shown to indicate nordvpn status.')
    nvpngroup.add_argument('--nordvpn-hide',
                           action='store_true',
                           help='Hide nordvpn status when disconnected')
    nvpngroup.add_argument('--nordvpn-active-style',
                           default='', metavar='STYLE',
                           help='Styling for an active nordvpn connection.')
    nvpngroup.add_argument('--nordvpn-inactive-style',
                           default='', metavar='STYLE',
                           help='Styling for an inactive nordvpn connection.')

    notmuchgroup = parser.add_argument_group('notmuch mail')
    notmuchgroup.add_argument('--notmuch',
                              action='store_const', const=notmuch,
                              help='Show indicator for nordvpn status.')
    notmuchgroup.add_argument('--notmuch-format',
                              default='{:02d}',
                              help='Format string for notmuch mail counts.')
    notmuchgroup.add_argument('--notmuch-icon', default='M', metavar='ICON',
                              help='Icon shown to indicate notmuch status.')
    notmuchgroup.add_argument('--notmuch-icon-style',
                              default='', metavar='STYLE',
                              help='Styling for notmuch mail icon')
    notmuchgroup.add_argument('--notmuch-hide-zero',
                              action='store_true',
                              help="When true don't show empty mail entries")
    notmuchgroup.add_argument('--notmuch-unread-style',
                              default='', metavar='STYLE',
                              help='Styling for unread emails.')
    notmuchgroup.add_argument('--notmuch-flagged-style',
                              default='', metavar='STYLE',
                              help='Styling for flagged emails.')

    parser.add_argument('--sep', metavar='STRING', default=' ',
                        help='Concatenate status indicators with STRING')
    parser.add_argument('-r', '--reset-style', default='#[default]',
                        help='Specify style for resetting styles')
    parser.add_argument('-u', '--unbuffer', action='store_true',
                        help='Immeadiately flush output after writing')
    parser.add_argument('-s', '--sleep', type=int,
                        help='When given, wait this duration between outputting')

    args  = parser.parse_args()
    vargs = vars(args)

    try:
        print_loop(render_loop(status_misc(args)), args.unbuffer, args.sleep)
    except KeyboardInterrupt:
        pass
