# -*- mode: python -*- python startup file
"""
Top level python repl configuration file.
"""

import os
import re
import sys
import pathlib

histfile = pathlib.Path(os.environ.get('XDG_CACHE_HOME', '~/.cache')).expanduser() / 'python_history'
try:
    import atexit
    import readline
except ImportError:
    pass
else:
    if not histfile.parent.exists():
        histfile.parent.mkdir()

    if histfile.exists():
        # see [[https://docs.python.org/3/library/readline.html#readline.set_auto_history][here]] for remaining readline methods.
        readline.read_history_file(histfile)

    readline.set_history_length(1000)
    atexit.register(readline.write_history_file, histfile)
del histfile
del atexit
del readline

if re.search(r'(-color|-256color|-24bit)$',
             os.environ.get('TERM')):
    sys.ps1 = '\033[32m>>> \033[0m'
    sys.ps2 = '\033[31m... \033[0m'
else:
    sys.ps1 = '>>> '
    sys.ps2 = '... '

# [[https://gist.github.com/vierno/977774][source]]: pretty print repr(value) values.
def _pretty_print_display_hook(value):
    if value is not None:
        # assigned by the [[https://docs.python.org/3/library/sys.html#sys.displayhook][default display hook]].
        # pylint: disable=C0415
        try:
            try:
                import __builtin__
                __builtin__._ = value
            except ImportError:
                __builtins__._ = value
        except AttributeError:
            pass

        import pprint
        pprint.pprint(value)
        del pprint


sys.displayhook = _pretty_print_display_hook

# Cleanup up temporary imports.
del pathlib
del os
del sys
