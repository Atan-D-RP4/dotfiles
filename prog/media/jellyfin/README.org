#+TITLE: Jellyfin
#  LocalWords:  jellyfins jellyfin tmpfs DDOS tmux

Open source and fully free complete media environment.

Jellyfin is a server program that can index, catalogue and tag media files such as TV
shows, movies, comic books, etc. and present them through a user-friendly web based,
mobile, TV, or video-player interface. It makes maintaining a personal media server
of the same quality as Netflix or Apple TV much simpler. Clients can pair with the
server host and then be streamed to directly and independently.

My configuration for jellyfin that's included in this repository is relatively
bare-bones. Firstly jellyfin always runs within Docker. This provides isolation and
security, since all my media files are mounted into a docker container in a read-only
file-system. Configurations and caches saved to [[file:~/.config/jellyfin/][$XDG_CONFIG_HOME/jellyfin]] and
[[file:~/.cache/jellyfin/][$XDG_CACHE_HOME/jellyfin]] respectively and are mounted into the jellyfin container.
This ensures any customisation's and most importantly the library index is
persistent. [[https://jellyfin.org/docs/general/networking/fail2ban.html][fail2ban]] is installed into the docker image and setup to prevent snoopers
or DDOS attacks if you choose to expose jellyfin outside of your home network.

To run jellyfin, simply run the [[file:tmux/jellyfin.yml][tmuxp]] configuration for jellyfin and then open a
client (such as the web client at [[http://0.0.0.0:8096]]) to start configuring and
viewing your media libraries. Once you detach from the tmux session for jellyfin then
the container image will automatically be killed.

* Media Library Format
  This section documents how you should layer out your media library on the
  file-system to ensure jellyfin can parse the metadata from it and find it.

  Generally you can layer files however you like so long as the file-names make the
  content clear. The simplest supported format is just ~Name.ext~. If you need to
  associate a year with the media place it in parentheses after the file name: ~Name
  (2022).ext~. If you have *variants* or other metadata associated with a media item
  simply separate it from the name and year with a hyphen and wrap the metadata in
  square brackets: ~Name (2022) - [BD 1080p].ext~. Jellyfin should automatically group
  multiple items like this (if you supply them) as variants of the same media.

  If your media items have any external items such as subtitles or audio you should
  place them in the same directory with the same base name as the media file. If
  there are multiple or you have some metadata for them you can place them as
  dot-delimited entries after the basename and before the extension. For example
  ~file.srt~ or ~file.default.forced.en.srt~ for ~file.mp4~.

** Common Tags
   #+CAPTION: Metadata tags I commonly use with media items (this list isn't exhaustive).
   | Type         | Example           | Description                          |
   |--------------+-------------------+--------------------------------------|
   | Resolution   | 480p, 720p, 1080p | Different display resolutions        |
   | Release Type | DVD, BD, WEB      | Media release type (BD means BluRay) |

   *Note*: Whatever tag you decide to use: periods, commas and other characters are not
   supported. Try to keep them alpha-numeric and delimit them with spaces.

   If you're commonly combining tags like this you can place them in the same
   metadata section. Otherwise you should create separate sections for each. For
   example both
   ~File - [BD 1080p] [HorribleSubs].ext~
   and
   ~File - [BD][1080p][HorribleSubs].ext~
   are valid file names.

** Media Types
*** Television
    :PROPERTIES:
    :DOCUMENTATION: https://jellyfin.org/docs/general/server/media/shows.html#poster
    :END:

    TV series should be layered into a hierarchies of the series name and then seasons
    and lastly episodes within that season. Episodes should be titled as ~S0XE0Y~ for
    season X episode Y. For grouped episodes such as a single file covering the first
    and second episode you can range them using a hyphen: ~S0XE0Y-0Z~.

    Like [[*Movies][movies]] you can also associate use metadata provider tags for the series.

    If you want to include the episode title on the media item, place it after the
    name but before any tags. For example
    ~S01E01 - Some Title [WEB 1080p].mp4~
    or if you'd like to include the series name as well
    ~Series - S01E01 - Some Title [WEB 1080p].mp4~.

*** Movies
    :PROPERTIES:
    :DOCUMENTATION: https://jellyfin.org/docs/general/server/media/movies.html
    :END:

    Movies can be placed directly as individual files, in a directory matching their
    name or a directory with a year suffix to help distinguish similar names. The
    rules for variants described above still applies (place all variants in the same
    folder).

    #+begin_center
    - Movies/
      - Film.ext
      - Film
        - Film.ext
      - Film (2019)
        - Film.ext
    #+end_center

    If the name is very generic or could be confused with something else you can list
    an explicit series using a metadata tag.

    #+begin_center
    - Movies
      - Film [imdbid-tt0106145]
        - Film.ext
      - Film (2022) [tmdbid-65567]
        - Film.ext
    #+end_center

    If you have any extra content for the film you can place them in some supported
    [[https://jellyfin.org/docs/general/server/media/movies.html#extras-folders][folder types]] (default to ~extra~ when in doubt).

*** Music
    :PROPERTIES:
    :DOCUMENTATION: https://jellyfin.org/docs/general/server/media/music.html
    :END:

    Like TV series, music should be layered out into a hierarchy in order of
    Artist->Album->Track. Tracks should be formatted as ~01 - title.ext~. This
    structure is mostly optional since Jellyfin will group songs by the album and
    artist metadata stored within them.

    *Note*: As of now jellyfin does not support archive based album formats like mpd.

    #+begin_center
    - Music
      - Artist
        - Album 1
          - 01 - song.ext
          - 02 - song.ext
        - Album 2
          - Disc 1
            - 01 - song.ext
            - 02 - song.ext
          - Disc 2
            - 01 - song.ext
            - 02 - song.ext
    #+end_center
